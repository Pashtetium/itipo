<resources>
    <string name="app_name">Основы Информационной Безопасности</string>
    <string name="Theory">Теория</string>
    <string name="Tests">Тесты</string>
    <string name="Encryption">Шифрование</string>
    <string name="help">Справочная информация</string>
    <string name="art1">Простая замена</string>
    <string name="art2">Полиалфавитная замена</string>
    <string name="art3">Маршруты Гамильтона</string>
    <string name="art4">Цифровая подпись RSA</string>
    <string name="title_activity_quiz">Тесты</string>
    <string name="action_settings">Settings</string>
    <string name="QuizTitle" />
    <string name="Question" />
    <string name="btn_answer1" />
    <string name="btn_answer2" />
    <string name="btn_answer3" />
    <string name="btn_answer4" />
    <string name="art_1p1">"      "Cущность методов замены (подстановки) заключается в замене символов
исходной информации, записанных в одном алфавите, символами из другого
алфавита по определенному правилу.
\n"      "Самым простым является метод прямой замены. Символам Soi исходного
алфавита Ао, с помощью которых записывается исходная информация, однозначно
ставятся в соответствие символы S1i шифрующего алфавита Ai. В простейшем случае
оба алфавита могут состоять из одного и того же набора символов. Например, оба
алфавита могут содержать буквы алфавита кириллица.
\n"      "Задание соответствия между символами обоих алфавитов осуществляется с
помощью преобразования числовых эквивалентов символов исходного текста То,
длиной - К символов, по определенному алгоритму.
\n"      "Алгоритм моноалфавитной замены может быть представлен в виде
последовательности шагов.
\n"   "Шаг 1. Формирование числового кортежа Loh путем замены каждого символа Soi
To (i=l,K), представленного в исходном алфавите Ао размера [lxR], на число hoi(soi),
соответствующее порядковому номеру символа soi в алфавите Ао.
\n"   "Шаг 2. Формирование числового кортежа L1h путем замены каждого числа
кортежа Loh на соответствующее число h1i кортежа L1h, вычисляемое по формуле:
</string>
    <string name="art_1p2">
"   "где ki - десятичный коэффициент; к2 - коэффициент сдвига. Выбранные
коэффициенты K1, K2 должны обеспечивать однозначное соответствие чисел hoi и
h1i, а при получении h1i = 0 выполнить замену h1i = R.
\n"   "Шаг 3. Получение шифротекста T1 путем замены каждого числа h1i(s1i) кортежа
L1h со-ответствующим символом s1i Ti (i=l,K) алфавита шифрования А1 размера
[1XR].
\n"   "Шаг 4. Полученный шифротекст разбивается на блоки фиксированной длины b.
Если последний блок оказывается неполным, то в конец блока помещаются
специальные символы-заполнители (например, символ *).
\n"     "Пример. Исходными данными для шифрования являются:
        \n"     "Т0 = &lt;МЕТОД_ШИФРОВАНИЯ&gt;;
        \n"     "Ао = &lt;АБВГДЕЖЗИКЛМНОПРСТУФХЦЧШЩ ЪЫЬЭЮЯ &gt;;
        \n"     "А1 = &lt;ОРЩЬЯТЭ_ЖМЧХАВДЫФКСЕЗПИЦГНЛЪШБУЮ&gt;;
        \n"     "R=32; k1=3; k2=15, b=4.
   \n"     "     Пошаговое выполнение алгоритма приводит к получению сле¬дующих
результатов.
\n"     "        Шаг1. L0h = &lt;12,6,18,14,5,32,24,9,20,1б,14,3,1,13,9,31&gt;.
        \n"     "Шаг 2. L1h = &lt;19,1,5,25,30,15,23,10,11,31,25,24,18,22,10,12&gt;.
        \n"     "Шаг 3. T1 =&lt;С О Я Г Б Д И М Ч У Г Ц К П М X &gt;.
        \n"     "Шаг4. Т2 = &lt;СОЯГ БДИМ ЧУГЦ КПМХ&gt;.
\n"     "         При расшифровании сначала устраняется разбиение на блоки. Получается
непрерывный шифротекст Ti длиной К символов. Расшифрование осуществляется
путем решения целочисленного уравнения: </string>
    <string name="art_1p3">
    \n"     "При  известных  целых  величинах  ki,  k2,  h1i  и  R  величина  hoi  вычисляется методом перебора.
    \n"     "Последовательное применение этой процедуры ко всем символам шифротекста приводит к его расшифрованию.
    \n"     "По условиям приведенного примера может быть построена таблица замены, в которой взаимозаменяемые символы располагаются в одном столбце.
    </string>
    <string name="art_1p4">
    \n"     "Использование таблицы замены значительно упрощает процесс  шифрования.
    \n"     "При шифровании символ исходного текста сравнивается с символами строки soi таблицы. Если произошло совпадение в i-м столбце, то символ исходного текста заменяется символом из строки s1j, находящегося в том же столбце i таблицы.
    \n"     "Расшифрование  осуществляется  аналогичным  образом,	но  вход  в  таблицу производится по строке s1i.
    </string>
    <string name="art_2p1">
    \n"     "При N-алфавитной замене символ soi из исходного алфавита Ао заменяется символом S11 из алфавита A1, S02 заменяется символом S22 из алфавита А2 и так далее.
    \n"     "После замены s0n символом Snn из An символ so(n+i) замещается символом S1(n+1) из алфавита A1 и так далее.
    \n"     "Наибольшее распространение получил алгоритм полиалфавитной замены с использованием таблицы (матрицы) Вижинера Тв, которая представляет собой квадратную матрицу [RxR],
где R - количество символов в используемом алфавите. В первой строке располагаются символы в алфавитном порядке. Начиная со второй строки, символы записываются со сдвигом влево на одну позицию.
Выталкиваемые символы заполняют освобождающиеся позиции справа (циклический сдвиг). Если используется русский алфавит, то матрица Вижинера имеет размерность [32x32].
    </string>
    <string name="art_2p2">
    \n"     "Шифрование осуществляется с помощью ключа, состоящего из М неповторяющихся символов. Из полной матрицы Вижинера выделяется матрица шифрования Тш„ размерностью [(М+1);R].
Она включает первую строку и строки, первые элементы которых совпадают с символами ключа. Если в качестве ключа выбрано слово &lt;ЗОНД&gt;, то матрица шифрования содержит пять строк.
    \n"     "Пример использования матрицы Вижинера для шифрования текста
    \n"     "Алгоритм  зашифрования  с  помощью  таблицы  Вижинера  представляет  собой следующую последовательность шагов:
    \n"   "Шаг 1. Выбор ключа К длиной М символов.
    \n"   "Шаг 2. Построение матрицы шифрования ТШ=(Ц) размерностью [(М+1 ), R] для выбранного ключа К.
        \n"   "Шаг  3.  Под  каждым  символом  Sor  исходного  текста  длиной  1  символов размещается символ ключа km. Ключ повторяется необходимое число раз.
        \n"   "Шаг  4.  Символы  исходного  текста  последовательно  замещаются  символами, выбираемыми из Тш по следующему правилу:
        \n"         "-	определяется символ к™ ключа К, соответствующий	замещаемому символу sor;
\n"         "-	находится строка i в Тш, для которой	выполняется  условие кт=Ьи;
        \n"         "-	определяется столбец j, для которого выполняется условие: sOr=bij;
        \n"         "-	символ sot замещается символом by.
        \n"   "Шаг 5. Полученная зашифрованная последовательность разбивается на блоки определенной длины, например, по четыре символа. Последний блок дополняется, при необходимости, служебными символами до полного объема.
        \n"     "Расшифрование осуществляется в следующей последовательности:
        \n"   "Шаг 1. Под шифртекстом записывается последовательность символов ключа по аналогии с шагом 3 алгоритма зашифрования.
\n"   "Шаг 2. Последовательно выбираются символы sr из шифртекста и соответствующие символы ключа km. В матрице Тш определяется строка i. для которой выполняется условие кщ= Ьп. В строке i определяется элемент by= s)r. В расшифрованный текст на позицию г помещается символ bij.
        \n"   "Шаг 3. Расшифрованный текст записывается без разделения на блоки. Убираются служебные символы.
        \n"     "Пример. Требуется с помощью ключа К = &lt;ЗОНД&gt; зашифровать исходный текст Т = &lt;БЕЗОБЛАЧНОЕ_НЕБО&gt;.
        \n"     "Механизмы зашифрования и расшифрования представлены следующим образом:
</string>
    <string name="art_3p1">
      \n"     "Суть методов перестановки заключается в разделении исходного текста на блоки фиксированной длины и последующей перестановке символов внутри каждого блока по определенному алгоритму.
        \n"     "Перестановки получаются за счет разницы путей записи исходной информации и путей считывания зашифрованной информации в пределах геометрической фигуры. Примером простейшей перестановки является запись блока исходной информации в матрицу по строкам, а считывание - по столбцам. Последовательность заполнения строк матрицы и считывания зашифрованной информации по столбцам может задаваться ключом.
        \n"     "Криптостойкость метода зависит от длины блока (размерности матрицы).
        \n"     "Перестановки используются также в методе, основанном на применении маршрутов Гамильтона. Этот метод реализуется путем выполнения следующих шагов:
\n"   "Шаг 1. Исходная информация разбивается на блоки. Если длина шифруемой информации не кратна длине блока, то на свободные места последнего блока помещаются специальные служебные символы-заполнители (например, *).
        \n"   "Шаг 2. Символами блока заполняется таблица, в которой для каждого порядкового номера символа в блоке отводится вполне определенное место.
        \n"   "Шаг 3. Считывание символов из таблицы осуществляется по одному из маршрутов. Увеличение числа маршрутов повышает криптостойкость шифра. Маршруты выбираются либо последовательно, либо их очередность задается ключом К.
        \n"   "Шаг 4. Зашифрованная последовательность символов разбивается на блоки фиксированной длины L. Величина L может отличаться от длины блоков, на которые разбивается исходная информация на шаге 1.
\</string>
    <string name="art_3p2">
       \n"     "Расшифрование производится в обратном порядке. В соответствии с ключом выбирается маршрут и заполняется таблица согласно этому маршруту.
Из	таблицы	символы	считываются	в	порядке следования номеров элементов.
        \n"     "<b>Пример использования маршрутов Гамильтона для шифрования текста</b>
        \n"     "Пусть требуется зашифровать исходный текст
        \n"     "То = &lt;МЕТОДЫ_ПЕРЕСТАНОВКИ&gt;.
\n"     "Ключ и длина зашифрованных блоков соответственно равны: К=&lt;2.1,1&gt;, L=4.
        \n"     "Для шифрования используются таблица и два маршрута. Для заданных условий маршруты с заполненными матрицами имеют следующий вид:
        </string>
    <string name="art_3p3">
        \n"   "Шаг 1. Исходный текст разбивается на три блока: Б1 =&lt;МЕТОДЫ_П&gt;;
        \n"   "Б2 = &lt;ЕРЕСТАНО&gt;;
        \n"   "БЗ = &lt;ВКИ*****&gt;.
        \n"   "Шаг 2. Заполняются три матрицы с маршрутами 2,1,1
        \n"   "Шаг 3. Получение шифртекста путем расстановки символов в соответствии с маршрутами. Т, = &lt;ОП ТМЕЫДЕСРЕТАОНИ*КВ****&gt;.
\n"   "Шаг 4. Разбиение на блоки шифртекста
        \n"   "Т] = &lt;ОП_Т МЕЫД ЕСРЕ ТАОН И*КВ ****&gt;.
    </string>
    <string name="art_4p1">
        \n"     "ЭЦП— реквизит электронного документа, предназначенный для защиты данного электронного документа от подделки, полученный в результате криптографического преобразования информации с использованием закрытого ключа электронной цифровой подписи и позволяющий идентифицировать владельца сертификата ключа подписи, а также установить отсутствие искажения информации в электронном документе, а также обеспечивает неотказуемость подписавшегося.
        \n"     "Схема электронной подписи обычно включает в себя:
        \n"         "- алгоритм генерации ключевых пар пользователя;
        \n"         "- функцию вычисления подписи;
        \n"         "- функцию проверки подписи.
</string>
    <string name="art_4p2">
        \n"     "Функция вычисления подписи на основе документа и секретного ключа пользователя вычисляет собственно подпись. В зависимости от алгоритма функция вычисления подписи может быть детерминированной или вероятностной.
        \n"     "Детерминированные функции всегда вычисляют одинаковую подпись по одинаковым входным данным. Вероятностные функции вносят в подпись элемент случайности, что усиливает криптостойкость алгоритмов ЭЦП. Однако, для вероятностных схем необходим надёжный источник случайности (либо аппаратный генератор шума, либо криптографически надёжный генератор псевдослучайных бит), что усложняет реализацию.
        \n"     "В настоящее время детерминированные схемы практически не используются. Даже в изначально детерминированные алгоритмы сейчас внесены модификации, превращающие их в вероятностные (так, в алгоритм подписи RSA вторая версия стандарта PKCS#1 добавила предварительное преобразование данных (OAEP), включающее в себя, среди прочего, зашумление).
        \n"     "Функция проверки подписи проверяет, соответствует ли данная подпись данному документу и открытому ключу пользователя. Открытый ключ пользователя доступен всем, так что любой может проверить подпись под данным документом.
        \n"     "Поскольку подписываемые документы — переменной (и достаточно большой) длины, в схемах ЭЦП зачастую подпись ставится не на сам документ, а на его хэш. Для вычисления хэша используются криптографические хэш-функции, что гарантирует выявление изменений документа при проверке подписи. Хэш-функции не являются частью алгоритма ЭЦП, поэтому в схеме может быть использована любая надёжная хэш-функция.
        \n"     "Алгоритмы ЭЦП делятся на два больших класса: обычные цифровые подписи и цифровые подписи с восстановлением документа. Обычные цифровые подписи необходимо пристыковывать к подписываемому документу. К этому классу относятся, например, алгоритмы, основанные на эллиптических кривых (ECDSA, ГОСТ Р 34.10-2001, ДСТУ 4145-2002). Цифровые подписи с восстановлением документа содержат в себе подписываемый документ: в процессе проверки подписи автоматически вычисляется и тело документа. К этому классу относится один из самых популярных алгоритмов — RSA.
        \n"     "Следует различать электронную цифровую подпись и код аутентичности сообщения, несмотря на схожесть решаемых задач (обеспечение целостности документа и н еотказуемости авторства). Алгоритмы ЭЦП относятся к классу асимметричных алгоритмов, в то время как коды аутентичности вычисляются по симметричным схемам.
        \n"     "Цифровая подпись обеспечивает:
        \n"         "- Американские стандарты электронной цифровой подписи: DSA, ECDSA;
        \n"         "- Российские стандарты электронной цифровой подписи: ГОСТ Р 34.10-94 (в настоящее время не действует), ГОСТ Р 34.10-2001;
        \n"         "- Украинский стандарт электронной цифровой подписи: ДСТУ 4145-2002;
        \n"         "- Стандарт PKCS#1 описывает, в частности, схему электронной цифровой подписи на основе алгоритма RSA;
        \n"         "- ElGamal;
        \n"         "- Вероятностная схема подписи Рабина.
        \n"     "Важной проблемой всей криптографии с открытым ключом, в том числе и систем ЭЦП, является управление открытыми ключами. Необходимо обеспечить доступ любого пользователя к подлинному открытому ключу любого другого пользователя, защитить эти ключи от подмены злоумышленником, а также организовать отзыв ключа в случае его компрометации.
        \n"     "Задача защиты ключей от подмены решается с помощью сертификатов. Сертификат позволяет удостоверить заключённые в нём данные о владельце и его открытый ключ подписью какого-либо доверенного лица. В централизованных системах сертификатов (например PKI) используются центры сертификации, поддерживаемые доверенными организациями. В децентрализованных системах (например PGP) путём перекрёстного подписывания сертификатов знакомых и доверенных людей каждым пользователем строится сеть доверия.
        \n"     "Управлением ключами занимаются центры распространения сертификатов. Обратившись к такому центру пользователь может получить сертификат какого-либо пользователя, а также проверить, не отозван ли ещё тот или иной открытый ключ.
    </string>
    <string name="art_5p1">
        \n"     "Особенности защиты информации в компьютерных сетях обусловлены тем, что сети, обладая несомненными преимуществами обработки информации, по сравнению с локальными компьютерами, усложняют организацию защиты, образуя следующие основные проблемные направления:
        \n"         "1. Разделение совместно используемых ресурсов;
        \n"         "2. Расширение зоны контроля;
        \n"         "3. Комбинация различных программно-аппаратных средств;
        \n"         "4. Неизвестный периметр;
        \n"         "5. Множество точек атаки;
        \n"         "6. Сложность управления и контроля доступа к системе.
        \n"     "На компьютерах с ОС Windows 7 по умолчанию установлена защита ПК от несанкционированного доступа через локальную сеть и Интернет, именуемая не иначе как брандмауэр, сетевой экран или firewall.
        \n"     "Политика безопасности межсетевого экрана базируется на принципе «все, что не разрешено, запрещено»
        \n"     "Брандмауэр представляет собой программный или аппаратный комплекс, который проверяет данные, входящие через Интернет или сеть, и в зависимости от параметров брандмауэра блокирует или разрешает их передачу на компьютер.
        \n"     "Брандмауэр поможет предотвратить проникновение хакеров или вредоносного программного обеспечения (такого как черви) в ваш компьютер через сеть или Интернет. Брандмауэр также помогает предотвратить отправку вредоносных программ на другие компьютеры.

    </string>
    <string name="art_5p2">
    \n"     "Брандмауэр несколько отличается от антивирусной программы. Чтобы защитить компьютер, потребуется как брандмауэр, так и программа по борьбе с вирусами и вредоносным ПО.
    \n"     "Контроль трафика состоит в его фильтрации, то есть выборочном пропускании через экран, а иногда и с выполнением специальных преобразований и формированием извещений для отправителя, если его данным в пропуске было отказано.
    \n"     "Фильтрация осуществляется на основании набора условий, предварительно загруженных в брандмауэр и отражающих концепцию информационной безопасности корпорации. Брандмауэры могут быть выполнены как в виде аппаратного, так и программного комплекса, записанного в коммутирующее устройство или сервер доступа (сервер-шлюз, прокси-сервер, хост-компьютер и т. д.).
    \n"     "Работа брандмауэра заключается в анализе структуры и содержимого информационных пакетов, поступающих из внешней сети, и в зависимости от результатов анализа пропуска пакетов во внутреннюю сеть (сегмент сети) или полное их отфильтровывание.
    \n"     "Эффективность работы межсетевого экрана обусловлена тем, что он полностью переписывает реализуемый стек протоколов TCP/IP, и поэтому нарушить его работу с помощью искажения протоколов внешней сети (что часто делается хакерами) невозможно.
    \n"     "Межсетевые экраны обычно выполняют следующие функции:
    \n"         "−физическое отделение рабочих станций и серверов внутреннего сегмента сети (внутренней подсети) от внешних каналов связи;
    \n"         "−многоэтапная идентификация запросов, поступающих в сеть (идентификация серверов, узлов связи и прочих компонентов внешней сети);
    \n"         "−проверка полномочий и прав доступа пользователей к внутренним ресурсам сети;
    \n"         "−регистрация всех запросов к компонентам внутренней подсети извне;
    \n"         "−контроль целостности программного обеспечения и данных;
    \n"         "−экономия адресного пространства сети (во внутренней подсети может использоваться локальная система адресации серверов);
    \n"         "−сокрытие IP-адресов внутренних серверов с целью защиты от хакеров.
    \n"     "На сетевом уровне выполняется фильтрация поступающих пакетов, основанная на IP-адресах (например, не пропускать пакеты из Интернета, направленные на те серверы, доступ к которым извне не должен осуществляться; не пропускать пакеты с фальшивыми обратными адресами или с IP-адресами, занесенными в «черный список» и т. д.)
    \n"     "На транспортном уровне фильтрация возможна еще и по номерам портов TCP и флагов, содержащихся в пакетах (например, запросов на установление соединения).
    \n"     "На прикладном уровне может выполняться анализ прикладных протоколов (FTP, TTP, SMT и т. д.) и контроль за содержанием потоков данных (запрет внутренним абонентам на получение каких-либо типов файлов: рекламной информации или исполняемых программных модулей, например).
    \n"     "В брандмауэре возможно наличие экспертной системы, которая, анализируя трафик, диагностирует события, потенциально представляющие угрозу безопасности внутренней сети, извещает об этом администратора сети, а в случае опасности она может автоматически ужесточать условия фильтрации и т. д.
    \n"     "Основные компоненты брандмауэра:
    \n"         "−политика сетевого доступа;
    \n"         "−механизмы усиленной аутентификации;
    \n"         "−фильтрация пакетов;
    \n"         "−прикладные шлюзы.
    </string>
    <string name="art_6p1">
        \n"     "<b>Обзор антивирусных программ</b>
        \n"     "Одной из самых больших угроз безопасности в информационных технологиях являются вирусы.
        \n"     "Эти вредоносные программы могут «украсть» или уничтожить персональные данные, однако защититься от такой опасности достаточно просто.
        \n"     "По запросу «антивирус» любая поисковая система выдаст вам с десяток ссылок, каждая из которых предлагает вам легкое и быстрое решение всех ваших проблем. А вот на чем остановить свой выбор?
        \n"     "<b>Желаете обмануться – доверяйте «независимым» исследованиям</b>
        \n"     "В Интернете достаточно много «независимых» исследований от различных обозревателей или каких-то там лабораторий, в которых говорится, порой убедительно, о преимуществах той или иной антивирусной системы над остальными.
        Не стоит обольщаться и слепо верить написанному, ведь достаточно очевидно, что идеалы не достижимы и все антивирусы обладают недостатками. Ну и естественно, что многие лаборатории являются «дочками» компаний-разработчиков, а обозреватели наняты заказчиками.
        Вы сами можете догадаться, насколько честны эти статьи.
        \n"     "Все антивирусы достаточно похожи друг на друга, но тем не менее, решать, какой выбрать, предстоит именно вам.
        \n"     "И все настройки, вами произведенные, и все возможные ошибки в «ловле» вирусов будут вашим самостоятельным решением, поэтому просто игнорируйте любые рекомендации источников в Интернете.
        \n"     "Рекомендациям скажите «нет», а вот читать и сравнивать вы просто обязаны. Поэтому в нашей сегодняшней статье мы попробуем рассказать о современных антивирусах и выделить особенности в каждой программе.
        \n"     "<b>Текущий топ антивирусов</b>
    </string>
    <string name="art_6p2">
        \n"     "<b>Dr.Web.</b>
        \n"     "Первым мы рассмотрим представителя классической артиллерии в борьбе с вирусами. Да, этот антивирус «тяжелый» и работает не так шустро, как его соперники.
        \n"     "Да, он требует достаточно много ресурсов. Да, платный, но, пожалуй, это самый большой недостаток, а вот достоинств у него хоть отбавляй. Главным, безусловно, плюсом является способность излечить буквально всё.
        \n"     "Из тысячи файлов Dr.Web не восстановит только штук пять, и то если они заражены и зашифрованы сразу несколькими паразитами. Вторым плюсом программы выступает постоянное совершенствование.
        \n"     "Кто постарше, тот вспомнит, каким неповоротливым был антивирус когда-то, и каким он стал сейчас! Его скорость работы кажется немыслимой, хотя и нагрузка на систему очевидно большая, но и выполняет антивирус свои дела на совесть.
        \n"     "А еще и пропали сложности с установкой и настройкой. На сайте есть все необходимые инструкции и мануалы. С обновлением и поддержкой также не возникнет никаких проблем, если у вас, естественно, есть лицензия. Сайт разработчика: www.drweb.ru

    </string>
    <string name="art_6p3">
        \n"     "<b>Dr.Web CureIt!</b>
        \n"     "Помимо обычного антивируса и нерассмотренного в статье комплексной программы Security Space компания Dr.Web выпускает и отдает в бесплатное домашнее использование еще и замечательную утилиту, названную CureIt!.
        \n"     "Она очень проста в использовании, прежде всего потому, что не требует установки и у нее нет проблем при работе на компьютере с другим антивирусным ПО, и на время запуска лечения ранее установленные антивирусы отключать или удалять не требуется.
        \n"     "Если ваш антивирус не справился со своей работой и какие-нибудь вирусы таки пробрались в вашу систему, то смело скачивайте CureIt!, запускайте утилиту, нажимайте одну-две кнопки и ждите – остальное программа сделает за вас.
        \n"     "В утилиту всегда встроены самые последние вирусные базы от основной программы Dr.Web, но стоит помнить, что и качать всегда нужно новую версию, потому что в CureIt! не входит модуль обновления вирусных баз.
        \n"     "Но, как пишут на сайте, новая версия утилиты выпускается один или несколько раз в час, поэтому у команды нашего блога нет сомнений в ее эффективности.
        \n"     "Утилита умеет игнорировать большинство блокировщиков Windows, а это позволяет еще эффективнее бороться с вирусами. Бесплатно проверить свой компьютер при помощи Dr.Web CureIT! можно на сайте www.free.drweb.ru

    </string>
    <string name="art_6p4">
        \n"     "<b>Kaspersky Anti-Virus.</b>
        \n"     "Его хвалят и ругают, его любят и ненавидят. Хвалят специалисты в области технологий и ругают другие эксперты, ненавидят конкуренты и любят простые пользователи. У Касперского есть очевидная главная проблема – он хочет очень много ресурсов.
        \n"     "Версия KIS (Kaspersky Internet Security) 2016 требует 2 Гигабайта оперативной памяти! Многие не любят эту программу за кучу ненужных модулей (они качественно проработаны и интегрированы, но порой пользователь и правда запускает их раз в год).
        \n"     "Но вся соль в том, что эти модули действительно улучшают программу, позволяя антивирусу качественнее справляться с угрозами. Некоторые версии Касперского позволяют, например, блокировать сайты стран, которым присвоен высокий уровень опасности заражения.
        \n"     "Родительский контроль, функции восстановления и откатов – это все довольно интересные механизмы, которые с лихвой компенсируют его главный недостаток. Но каким бы быстрым не становился Касперский с каждой версией, он все равно отстает от конкурентов.
        \n"     "Хотя в этом году компанией был сделан существенный прорыв в скоростном аспекте –представлен продукт Kaspersky Free, в котором убраны вышеупомянутые ненужные модули. Тем не менее, за платную версию деньги берут совсем не зря.
        \n"     "Сайт разработчика: www.kaspersky.ru

    </string>
    <string name="art_6p5">
         \n"     "<b>ESET NOD32</b>
        \n"     "Отличный антивирус, созданный в Словакии, который очень качественен в работе, правда является платным. Незначительная загрузка ресурсов является его главным достоинством.
        \n"     "Вы можете продолжать работу на компьютере, пока Eset сканирует систему. Никаких замедлений это не вызывает. Еще одним достоинством NOD выступает его прекрасная совместимость с другими антивирусами. Мы знаем случаи, когда пользователи одновременно устанавливали на компьютер платный NOD и бесплатный Avast (о котором ниже).
        \n"     "У ESET NOD 32 есть недостаток, но он довольно существенный. Почти во всех обзорах и независимых исследованиях этот антивирус занимает последние места в статистике лечения файлов. Бывали и такие цифры, как один вылеченный файл из 1000. Это, конечно же, печальный факт. Но тем не менее, как блокиратор вирусов на новую ОС эту программу можно рассматривать. Сайт разработчика: www.esetnod32.ru

    </string>
    <string name="art_6p6">
         \n"     "<b>Avast!</b>
        \n"     "Много где этот антивирус назван лучшим, правда надо быть внимательным, потому что не везде лучшей названа одна и та же версия программы. А версий у Аваста хватает: их целых четыре, начиная от Free до Premier.
        \n"     "Бесплатная версия, несомненно, является конкурентным преимуществом, при этом она обеспечивает достаточный уровень защиты. Все программы, пожалуй, кроме самой навороченной, нетребовательны к ресурсам системы, и их работу легко можно не заметить. Простая установка и настройка присуща этому антивирусу, дополнительным плюсом выступает «всеядность».
        \n"     "Авасту в целом не важно, каким вирусом модифицирован ваш файл, потому что интеллектуальное распознавание угроз может пресечь атаку на корню. Недостатки все же есть. Первый– куча рекламы в бесплатной версией. Второй – Аваст, как и NOD, не любит лечить уже зараженные файлы – ему гораздо проще предотвратить атаку. Правда, статистика тут все же менее печальна: по усредненным оценкам он вылечивает 20% вирусных файлов. Сайт разработчика: www.avast.ru

    </string>
    <string name="art_6p7">
        \n"     "<b>Какой антивирус лучше выбрать?</b>
        \n"     "Все рассмотренные нами антивирусы популярны, все они имеют какие-то преимущества перед другими. Но у всех у них есть одна общая черта: эти антивирусы являются кроссплатформенными. Установить вы их можете на любую операционную систему, даже мобильную, и все установочные дистрибутивы вы можете скачать и купить в одном месте.
        \n"     "И самое главное – помните, все эти антивирусы рассчитаны на ответственного пользователя. Знайте, что защитить ваши файлы лучше вас не сможет ни одна автоматика. Нажимая на кнопку «Принять в исключение», заставляя таким образом антивирус игнорировать потенциальную угрозу, вы сами ставите под удар свои данные. Антивирусы почти никогда не искупают целиком ошибки пользователей, а лишь попытаются их не допустить.
    </string>
    <string name="art_7p1">
        \n"     "Современная концепция создания компьютерных систем предполагает использование программных средств различного назначения в едином комплексе. К примеру, типовая система автоматизированного документооборота состоит из операционной среды, программных средств управления базами данных, телекоммуникационных программ, текстовых редакторов, антивирусных мониторов, средств для криптографической защиты данных, а также средств аутентификации и идентификации пользователей.
        \n"     "Главным условием правильного функционирования такой компьютерной системы является обеспечение защиты от вмешательства в процесс обработки информации тех программ, присутствие которых в компьютерной системе не обязательно.
        \n"     "Среди подобных программ, в первую очередь, следует упомянуть компьютерные вирусы. Однако имеются вредоносные программы еще одного класса. От них, как и от вирусов, следует с особой тщательностью очищать свои компьютерные системы.
        \n"     "Это так называемые программные закладки, которые могут выполнять хотя бы одно из перечисленных ниже действий:
        \n"         "- вносить произвольные искажения в коды программ, находящихся и оперативной памяти компьютера (программная закладка первого типа);
        \n"         "- переносить фрагменты информации из одних областей оперативной или внешней памяти компьютера в другие (программная закладка второго типа);
        \n"         "- искажать выводимую на внешние компьютерные устройства или в канал связи информацию, полученную в результате работы других программ (программная закладка третьего типа).
        \n"     "Программные закладки можно классифицировать и по методу их внедрения в компьютерную систему:
        \n"         "- программно-аппаратные закладки, ассоциированные с аппаратными средствами компьютера (их средой обитания, как правило, является BIOS - набор программ, записанных в виде машинного кода в постоянном запоминающем устройстве — ПЗУ);
        \n"         "- загрузочные закладки, ассоциированные с программами начальной загрузки, которые располагаются в загрузочных секторах (из этих секторов в процессе выполнения начальной загрузки компьютер считывает программу, берущую на себя управление для последующей загрузки самой операционной системы);
        \n"         "- драйверные закладки, ассоциированные с драйверами (файлами, и которых содержится информация, необходимая операционной системе для управления подключенными к компьютеру периферийными устройствами);
        \n"         "- прикладные закладки, ассоциированные с прикладным программным обеспечением общего назначения (текстовые редакторы, утилиты, антивирусные мониторы и программные оболочки);
        \n"         "- исполняемые закладки, ассоциированные с исполняемыми программными модулями, содержащими код этой закладки (чаше всего эти модули представляют собой пакетные файлы, т. е. файлы, которые состоят из команд операционной системы, выполняемых одна за одной, как если бы их набирали на клавиатуре компьютера);
        \n"         "- закладки-имитаторы, интерфейс которых совпадает с интерфейсом некоторых служебных программ, требующих ввод конфиденциальной информации (паролей, криптографических ключей, номеров кредитных карточек);
        \n"         "- замаскированные закладки, которые маскируются под программные средства оптимизации работы компьютера (файловые архиваторы, дисковые дефрагментаторы) или под программы игрового и развлекательного назначения.
        \n"     "Чтобы программная закладка могла произвести какие-либо действия по отношению к другим программам или по отношению к данным, процессор должен приступить к исполнению команд, входящих в состав кода программной закладки. Это возможно только при одновременном соблюдении следующих условий:
        \n"         "- программная закладка должна попасть в оперативную память компьютера (если закладка относится к первому типу, то она должна быть загружена до начала работы другой программы, которая является целью воздействия закладки, или во время работы этой программы);
        \n"         "- работа закладки, находящейся в оперативной памяти, начинается при выполнении ряда условий, которые называются активизирующими.
        \n"     "Интересно, что иногда сам пользователь провоцируется на запуск исполняемого файла, содержащего код программной закладки.
        \n"     "С учетом замечания о том, что программная закладка должна быть обязательно загружена в оперативную память компьютера, можно выделить резидентные закладки (они находятся в оперативной памяти постоянно, начиная с некоторого момента и до окончания сеанса работы компьютера, т. е. до его перезагрузки или до выключения питания)
        \n и нерезидентные (такие закладки попадают в оперативную память компьютера аналогично резидентным, однако, в отличие от последних, выгружаются по истечении некоторого времени или при выполнении особых условий).
        \n"     "Существуют три основные группы деструктивных действий, которые могут осуществляться программными закладками:
        \n"         "- копирование информации пользователя компьютерной системы (паролей, криптографических ключей, кодов доступа, конфиденциальных электронных документов), находящейся в оперативной или внешней памяти этой системы либо в памяти другой компьютерной системы, подключенной к ней через локальную или глобальную компьютерную сеть;
        \n"         "- изменение алгоритмов функционирования системных, прикладных и служебных программ (например, внесение изменений в программу разграничения доступа может привести к тому, что она разрешит вход в систему всем без исключения пользователям вне зависимости от правильности введенного пароля);
        \n"         "- навязывание определенных режимов работы (например, блокировании записи на диск при удалении информации, при этом информация, которую требуется удалить, не уничтожается и может быть впоследствии скопирована хакером).
    </string>
    <string name="art_8p1">
        \n"     "Одна из наиболее распространенных разновидностей программных закладок — клавиатурные шпионы. Такие программные закладки нацелены на перехват паролей пользователей операционной системы, а также на определение их легальных полномочий и прав доступа к компьютерным ресурсам.
        \n"     "Клавиатурные шпионы — явление отнюдь не новое в мире компьютеров. В свое время они разрабатывались и для OS/370, и для UNIX, и для DOS. Их поведение в общем случае является довольно традиционным: типовой клавиатурный шпион обманным путем завладевает пользовательскими паролями, а затем переписывает эти пароли туда, откуда их может без особого труда извлечь злоумышленник.
        \n"     "Различия между клавиатурными шпионами касаются только способа, который применяется ими для перехвата пользовательских паролей. Соответственно все клавиатурные шпионы делятся на три типа — имитаторы, фильтры и заместители.
        \n"     "<b>1. Имитаторы</b>
        \n"     "Клавиатурные шпионы этого типа работают по следующему алгоритму. Злоумышленник внедряет в операционную систему программный модуль, который имитирует приглашение пользователю зарегистрироваться для того, чтобы войти в систему. Затем внедренный модуль (в принятой терминологии — имитатор) переходит в режим ожидания ввода пользовательского идентификатора и пароля.
        \n"     "После того как пользователь идентифицирует себя и введет свой пароль, имитатор сохраняет эти данные там, где они доступны злоумышленнику. Далее имитатор инициирует выход из системы (что в большинстве случаев можно сделать программным путем), и в результате перед глазами у ничего не подозревающего пользователя появляется сто одно, но на этот раз уже настоящее приглашение для входа в систему.
        \n"     "Обманутый пользователь, видя, что ему предлагается еще раз внести пароль. приходит к выводу о том, что он допустил какую-то ошибку во время предыдущего ввода пароля, и послушно повторяет всю процедуру входи в систему заново. Некоторые имитаторы для убедительности выдают на экран монитора правдоподобное сообщение о якобы совершенной пользователем ошибке. Например, такое: "НЕВЕРНЫЙ ПАРОЛЬ. ПОПРОБУЙТЕ ЕЩЕ РАЗ".
        \n"     "Перехват пароля зачастую облегчают сами разработчики операционных систем, которые не затрудняют себя созданием усложненных по форме приглашений пользователю зарегистрироваться для входа в систему.
        \n"     "Подобное пренебрежительное отношение характерно для большинства версий операционной системы UNIX, в которых регистрационное приглашение состоит из двух текстовых строк, выдаваемых поочередно на экран терминала:
        \n"     "login:
        \n"     "password:
        \n"     "Системный процесс WinLogon, отвечающий в операционной системе Windows за аутентификацию пользователей, имеет свой собственный рабочий стол — совокупность окон, одновременно видимых на экране дисплея. Этот рабочий стол называется столом аутентификации. Никакой другой процесс, в том числе и имитатор, не имеет доступа к рабочему столу аутентификации и не может расположить на нем свое окно.
        \n"     "После запуска Windows на экране компьютера возникает так называемое начальное окно рабочего стола аутентификации, содержащее указание нажать на клавиатуре клавиши Ctrl+Alt+Del. Сообщение о нажатии этих клавиш передается только системному процессу WinLogon, а для остальных процессов, в частности, для всех прикладных программ, их нажатие происходит совершенно незаметно.
        \n"     "Далее производится переключение на другое, так называемое регистрационное окно рабочего стола аутентификации. В нем-то как раз и размещается приглашение пользователю ввести свое идентификационное имя и пароль, которые будут восприняты и проверены процессом WinLogon.
        \n"     "<b>2. Фильтры</b>
        \n"     "Фильтры "охотятся" за всеми данными, которые пользователь операционной системы вводит с клавиатуры компьютера. Самые элементарные фильтры просто сбрасывают перехваченный клавиатурный ввод на жесткий диск или в какое-то другое место, к которому имеет доступ злоумышленник. Более, изощренные программные закладки этого типа подвергают перехваченные данные анализу и отфильтровывают информацию, имеющую отношение к пользовательским паролям.
        \n"     "Фильтры являются резидентными программами, перехватывающими одно или несколько прерываний, которые связаны с обработкой сигналов от клавиатуры. Эти прерывания возвращают информацию о нажатой клавише и введенном символе, которая анализируется фильтрами на предмет выявления данных, имеющих отношение к паролю пользователя.
        \n"     "В общем случае можно утверждать, что если в операционной системе разрешается переключать клавиатурную раскладку во время ввода пароля, то для этой операционной системы возможно создание фильтра. Поэтому, чтобы обезопасить ее от фильтров, необходимо обеспечить выполнение следующих трех условий:
        \n"         "- во время ввода пароля переключение раскладок клавиатуры не разрешается ;
        \n"         "- конфигурировать цепочку программных модулей, участвующих в работе с паролем пользователя, может только системный администратор;
        \n"         "- доступ к файлам этих модулей имеет исключительно системный администратор.
        \n"     "<b>3. Заместители</b>
        \n"     "Заместители полностью или частично подменяют собой программные модули операционной системы, отвечающие за аутентификацию пользователей. Подобного рода клавиатурные шпионы могут быть созданы для работы в среде практически любой многопользовательской операционной системы.
        \n"     "Трудоемкость написания заместителя определяется сложностью алгоритмов, реализуемых подсистемой аутентификации, и интерфейсов между ее отдельными модулями. Также при оценке трудоемкости следует принимать во внимание степень документированности этой подсистемы. В целом можно сказать, что задача создания заместителя значительно сложнее задачи написания имитатора или фильтра.
        \n"     "Поскольку заместители берут на себя выполнение функций подсистемы аутентификации, перед тем как приступить к перехвату пользовательских паролей они должны выполнить следующие действия:
        \n"         "- подобно компьютерному вирусу внедриться в один или несколько системных файлов;
        \n"         "- использовать интерфейсные связи между программными модулями полсистемы аутентификации для встраивания себя в цепочку обработки введенного пользователем пароля.
    </string>
    <string name="art_9p1">
        \n"     "При шифровании перестановкой символы шифруемого текста переставляются по определенным правилам внутри шифруемого блока этого текста.
        \n"     "<i>Простая перестановка</i>
        \n"     "Шифр простой перестановки переупорядочивает группу букв текста регулярным образом в соответствии с выбранным ключом (правилом) перестановки. Из истории известно множество примеров использования таких шифров для ручного шифрования. При этом часто использовались специальные таблицы, которые давали простые шифрующие процедуры (ключи), согласно которым производились перестановки букв в сообщении. Ключом у таких таблиц служили размеры таблицы, фраза, задающая перестановку или другие специальные особенности таблицы.
        \n"     "ЮСТАС АЛЕКСУ ВСТРЕЧАЙТЕ СВЯЗНОГО
    </string>
    <string name="art_9p2">
        \n"     "ЮАУЕЕ НСЛВЧ СОТЕС АВГАК ТИЯОС СРТЗЬ
        \n"     "<i>Простая перестановка</i>
        \n"     "Как видно из рисунка, для того чтобы зашифровогать сообщение «ЮСТАС АЛЕКСУ ВСТРЕЧАЙТЕ СВЯЗНОГО», последнее необходимо записать в виде таблицы, состоящей, например, из 5 строк и 6 столбцов. Текст сообщения записывается по столбцам, исключая пробелы. Если последний столбец оказывается неполным, он заполняется произвольно лю-быми буквами. Для получения зашифрованного сообщения исходный текст считывается построчно (слева направо) и записывается группами, например, по 5 цифр.
        \n"     "Последняя процедура не относится к процессу шифрования и делается только для того, чтобы было удобнее записывать текст, лишенный всякого смысла. Для расшифрования такого текста необходимо знать ключ, а именно количество строк и столбцов в таблице или иными словами, ее размер.
        \n"     "Перестановку можно осуществить следующим образом:
        \n"     "1. Выбирается размер блока шифрования в n столбцов и m строк и ключевая последовательность, которая формируется из натурального ряда чисел 1,2,...,n случайной перестановкой.
        \n"     "2. Шифрование проводится в следующем порядке:
        \n"         "- Шифруемый текст записывается последовательными строками под числами ключевой последовательности, образуя блок шифрования размером n*m.
        \n"         "- Зашифрованный текст выписывается колонками в порядке возрастания номеров колонок, задаваемых ключевой последовательностью.
        \n"         "- Заполняется новый блок и т.д.
        \n"     "Например, зашифруем текст
        \n"     "ГРУЗИТЕ_АПЕЛЬСИНЫ_БОЧКАМИ
        \n"     "блоком размером 8*3 и ключом 5-8-1-3-7-4-6-2.
        \n"     "Таблица простой перестановки будет иметь вид:
    </string>
    <string name="art_9p3">
        \n"     "Зашифрованное сообщение:
        \n"             "УЕБЧ_НМЯЗЛОГТСКУГАЫИЕИАИИЬЧЕРП_А
        \n"     "Расшифрование выполняется в следующем порядке:
        \n"     "1. Из зашифрованного текста выделяется блок символов размером n*m.
        \n"     "2. Этот блок разбивается на n групп по m символов.
        \n"     "3. Символы записываются в те столбцы таблицы перестановки, номера которых совпадают с номерами групп в блоке. Расшифрованный текст читается по строкам таблицы перестановки.
        \n"     "4. Выделяется новый блок символов и т.д.
        \n"     "<i>Перестановка, усложненная по таблице</i>
        \n"     "То же сообщение можно зашифровать с использованием таблицы, состоящей, например, из 5 строк и 6 столбцов (по длине ключевого слова). Исходный текст записывается по столбцам и образует таблицу. Ключевое слово задает правило перестановки столбцов. Если в ключевом слове встречаются одинаковые буквы, то они нумеруются по порядку слева направо. Полученный второй шифротекст, совершенно не похож на первый.
    </string>
    <string name="art_9p4">
        \n"     "Основным недостатком данного шифра является его невысокая криптостойкость. Разложив зашифрованный текст на множители (не так уж много получается вариантов), можно легко определить вероятную длину кодового слова, которое использовалось при шифровании.
        \n"     "Для повышения криптостойкости полученного выше шифрованного текста можно попробовать зашифровать его еще раз. Этот способ шифрования известен под названием двойная перестановка. Суть этого способа заключается в следующем. Полученный после первого шифрования текст шифруется вторично с использованием таблицы с другой размерностью (длины строк и столбцов подбираются другими). Кроме того, в одной таблице можно переставлять строки, а в другой столбцы. Заполнять таблицу исходным текстом можно разными способами: зигзагом, змейкой, по спирали и т. п.
        \n"     "При усложнении перестановки по таблицам для повышения стойкости шифра в таблицу перестановки вводятся неиспользуемые клетки таблицы. Количество и расположение неиспользуемых элементов является дополнительным ключом шифрования.
        \n"     "При шифровании текста в неиспользуемые элементы не заносятся символы текста и в зашифрованный текст из них не записываются никакие символы - они просто пропускаются. При расшифровке символы зашифрованного текста также не заносятся в неиспользуемые элементы.
        \n"     "Для дальнейшего увеличения криптостойкости шифра можно в процессе шифрования менять ключи, размеры таблицы перестановки, количество и расположение неиспользуемых элементов по некоторому алгоритму, причем этот алгоритм становится дополнительным ключом шифра.
        \n"     "<i>Шифры сложной перестановки</i>
        \n"     "В случае использования шифра сложной перестановки группы символе открытого текста подвергаются перестановкам не только по строкам (как шифре простой перестановки), но и по столбцам. Это удобнее делать, используя вышеприведенную таблицу. В таблицу записывается открытое исходное сообщение, причем, это можно сделать различными вариантами.
        \n"     "В данном случае запишем текст сообщения построчно слева направо. Относительно двух сторон таблицы запишем ключевое слово и его числовой эквивалент, согласно которым произведем перестановку столбцов, расположив их в порядке возрастания цифр.
        \n"     "После этого, по тому же закону, произведем перестановку строк таблицы. Зашифрованное сообщение получится при считывании текста таблицы по строкам. Полученный шифротекст лишен смыслового содержания. Число вариантов двойной перестановки достаточно велико и зависит от размерности используемой шифровальной таблицы.Но даже использование таблиц большой размерности не делает этот шифр достаточно криптостойким.
    </string>
    <string name="art_9p5">
        \n"     "Зашифрованный текст:
        \n"             "ТЗРАВ АЕЗДА САМДН НЕПСН ОИЕСТ ТСОИЯ РЦПЮЪ О
    </string>
    <string name="art_10p1">
        \n"     "В аддитивных шифрах используется сложение по модулю (mod) исходного сообщения с гаммой, представленных в числовом виде. Напомним, что результатом сложения двух целых чисел по модулю является остаток от деления (например, 5+10 mod 4 = 15 mod 4 = 3).
        \n"     "В литературе шифры этого класса часто называют потоковыми. Стойкость закрытия этими шифрами определяется, главным образом, качеством гаммы, которое зависит от длины периода и случайности распределения по периоду.
        \n"     "Длиною периода гаммы называется минимальное количество символов, после которого последовательность цифр в гамме начинает повторяться. Случайность распределения символов по периоду означает отсутствие закономерностей между появлением различных символов в пределах периода.
        \n"     "По длине периода различаются гаммы с конечным и бесконечным периодом. Если длина периода гаммы превышает длину шифруемого текста, гамма является истинно случайной и не используется для шифрования других сообщений, то такое преобразование является абсолютно стойким (совершенный шифр). Такой шифр нельзя вскрыть на основе статистической обработки шифрограммы.
        \n"                 "<i>Сложение по модулю N.</i>
        \n"     "В 1888 г. француз маркиз де Виари в одной из своих научных статей, посвященных криптографии, доказал, что при замене букв исходного сообщения и ключа на числа справедливы формулы
        \n"     "Ci = (Pi + Ki) mod N,          (1)
        \n"     "Pi = (Ci + N - Ki) mod N,      (2)
        \n"     "где Pi, Ci - i-ый символ открытого и шифрованного сообщения;
        \n"     "N - количество символов в алфавите;
        \n"     "Кi - i-ый символ гаммы (ключа). Если длина гаммы меньше, чем длина сообщения, то она используется повторно.
        \n"     "Данные формулы позволяют выполнить зашифрование / расшифрование по Виженеру при замене букв алфавита числами согласно следующей таблице (применительно к русскому алфавиту):
    </string>
    <string name="art_10p2">
         \n"    "Например, для шифрования используется русский алфавит (N = 33), открытое сообщение – «АБРАМОВ», гамма – «ЖУРИХИН». При замене символов на числа букваА будет представлена как 0, Б – 1, …, Я – 32. Результат шифрования показан в следующей таблице.
        \n"     "Таблица 1. Пример аддитивного шифрования по модулю N
    </string>
    <string name="art_10p3">
        \n"                 "<i>Сложение по модулю 2</i>
        \n"     "Является частным случаем предыдущего шифра и используется при шифровании в автоматизированных системах. Символы текста и гаммы представляются в двоичных кодах, а затем каждая пара двоичных разрядов складывается по модулю 2 ( для булевых величин аналог этой операции – XOR, «Исключающее ИЛИ»). Процедуры шифрования и дешифрования выполняются по следующим формулам
        \n"     "Ci = Pi Ki,    (3)
        \n"     "Pi = Ci Ki     (4)
        \n"     "Перед иллюстрацией использования шифра приведем таблицу кодов символов Windows 1251 и их двоичное представление.
        \n"     "Таблица 2. Коды символов Windows 1251 и их двоичное представление
    </string>
    <string name="art_10p4">
    \n"     "Примечание. Dec-код – десятичный код символа, Bin-код – двоичный код символа.
    \n"     "Пример шифрования сообщения «ВОВА» с помощью гаммы «ЮЛЯ» показан в следующей таблице.
    \n"     "Таблица 3. Пример аддитивного шифрования по модулю 2
    </string>
    <string name="art_10p5">
    \n"     "Таблица истинности:
    \n"         "- для бинарного сложения по модулю 2 (применяется в двоичных полусумматорах):
    </string>

    <string name="Settings">Настройки</string>

    <string name="act_help">
        \n"     "Приложение запускается нажатием на иконку в списке программ. Далее вы попадете на главный экран, который содержит следующие кнопки для перехода:
        \n"             "-	Теория;
        \n"             "-	Тесты;
        \n"             "-	Статистика;
        \n"             "-	Помощь;
        \n"             "-	Настройки;
        \n"             "-	Выйти.
        \n"     "При нажатии на кнопку «Теория» откроется экран со списком лекций. При выборе откроется экран с содержанием теоретического материала. В правом верхнем углу находится кнопка поиска с помощью которой можно найти нужную тему.
        \n"     "При нажатии на кнопку «Тест» откроется экран выбора темы для теста. По нажатию кнопки «Начать тест» начнется тестирование с той категорией вопросов, которую указал пользователь. После прохождения теста пользователь попадает на экран с результатами тестирования. При нажатии кнопки «Поделиться результатами» открывается диалоговое окно со списком приложений которые поддерживают отправку текста из данной программы.
        \n"     "При нажатии кнопки «Статистика» откроется экран со статистикой тестирования. При нажатии кнопки «Стереть данные» произойдет сброс статистики.
        \n"     "При нажатии кнопки «Справочная информация» откроется экран, который содержит справочную информацию.
        \n"     "При нажатии кнопки «Настройки» откроется экран с настройками приложения.
        \n"     "При нажатии кнопки «Выйти» программа завершит работу.
        \n"     "

    </string>
</resources>

